name: Build and Release Forge Mod

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      mod_version: ${{ steps.get_mod_version.outputs.mod_version }}
      mod_id: ${{ steps.get_mod_version.outputs.mod_id }}
      minecraft_version: ${{ steps.get_mod_version.outputs.minecraft_version }}
      game_endpoint: ${{ steps.get_mod_version.outputs.game_endpoint }}
      relations: ${{ steps.get_mod_version.outputs.relations }}
      game_versions: ${{ steps.get_mod_version.outputs.game_versions }}
      java: ${{ steps.get_mod_version.outputs.java }}
      project_id: ${{ steps.get_mod_version.outputs.project_id }}
      github_branch: ${{ steps.get_mod_version.outputs.github_branch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run JarJar
        run: ./gradlew jarjar

      - name: Find Jar File
        id: find_jar
        run: echo "JAR_FILE=$(ls build/libs/*.jar | head -n 1)" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ForgeMod
          path: build/libs/*.jar

      - name: Extraer mod_version de gradle.properties
        id: get_mod_version
        run: |
          MOD_VERSION=$(grep '^mod_version=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          MOD_ID=$(grep '^mod_id=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          MINECRAFT_VERSION=$(grep '^minecraft_version=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          GAME_ENDPOINT=$(grep '^game_endpoint=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          RELATIONS=$(grep '^relations=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          RELEASE_TYPE=$(grep '^release_type=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          GAME_VERSIONS=$(grep '^game_versions=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          JAVA=$(grep '^java=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          PROJECT_ID=$(grep '^project_id=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          GITHUB_BRANCH=$(grep '^github_branch=' gradle.properties | awk -F'=' '{print $2}' | tr -d '[:space:]')
          echo "mod_version=$MOD_VERSION" >> $GITHUB_OUTPUT
          echo "mod_id=$MOD_ID" >> $GITHUB_OUTPUT
          echo "minecraft_version=$MINECRAFT_VERSION" >> $GITHUB_OUTPUT
          echo "game_endpoint=$GAME_ENDPOINT" >> $GITHUB_OUTPUT
          echo "relations=$RELATIONS" >> $GITHUB_OUTPUT
          echo "release_type=$RELEASE_TYPE" >> $GITHUB_OUTPUT
          echo "game_versions=$GAME_VERSIONS" >> $GITHUB_OUTPUT
          echo "java=$JAVA" >> $GITHUB_OUTPUT
          echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT
          echo "github_branch=$GITHUB_BRANCH" >> $GITHUB_OUTPUT
  curseforge-release:
    runs-on: ubuntu-latest
    needs: [ build ]
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install git-cliff
        run: npm install -g git-cliff

      - name: Generate changelog
        run: git cliff --tag "$(git describe --tags --abbrev=0)" -o CHANGELOG-${{ needs.build.outputs.mod_version }}.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.mod_version }}
          files: build/libs/*.jar
          body_path: CHANGELOG-${{ needs.build.outputs.mod_version }}.md
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: ForgeMod
          path: build/libs

      - uses: Kir-Antipov/mc-publish@v3.3.0
        with:
          curseforge-id: ${{ needs.build.outputs.project_id }}
          curseforge-token: ${{ secrets.CF_API_TOKEN }}

          github-tag: ${{ needs.build.outputs.mod_version }}
          github-draft: false
          github-prerelease: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-commitish: ${{ needs.build.outputs.github_branch }}

          files: |
            build/libs/${{ needs.build.outputs.mod_id }}-${{ needs.build.outputs.mod_version }}.jar

          name: ${{ needs.build.outputs.mod_id }}-${{ needs.build.outputs.mod_version }}.jar
          version: ${{ needs.build.outputs.mod_version }}
          version-type: ${{ needs.build.outputs.release_type }}
          changelog-file: CHANGELOG-${{ needs.build.outputs.mod_version }}.md

          loaders: |
            forge
          game-versions: |
            ${{ needs.build.outputs.minecraft_version }}
          java: |
            ${{ needs.build.outputs.java }}
          retry-attempts: 2
          retry-delay: 10000
          fail-mode: warn